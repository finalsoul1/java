package p803;

/*
 * 같은 결과를 얻는다면 최대한 코드를 짧게 쓰고 싶다
 */
public class Test {

	public static void main(String[] args) {
		// Runnable인터페이스가 요구하는 기능을 가진 객체 (기능을 물어봄)
		Runnable worker = new Worker();
		Thread t = new Thread(worker, "A");
		t.start();

		Runnable worker2 = new Worker();
		new Thread(worker2, "B").start();

//		new Thread().start(); // 스레드객체에 입력값이 없으면 콜스택을 생성했다가 바로 파괴함

		// 익명클래스 (인터페이스를 구현한 '이름없는클래스'의 객체)
		new Thread(new Runnable() {
			@Override
			public void run() {
				String name = Thread.currentThread().getName();
				for (int i = 0; i < 10; i++) {
					System.out.println(name + "스레드" + " i = " + i);
				}
			}
		}, "C").start();

		new Thread(() -> {
			for (int i = 0; i < 10; i++) {
				System.out.println(name + "스레드" + " i = " + i);
			}
		}, "R").start();

	}

}

class Worker implements Runnable {
	@Override
	public void run() {
		String name = Thread.currentThread().getName();
		for (int i = 0; i < 10; i++) {
			System.out.println(name + "스레드" + " i = " + i);
		}
	}
}
